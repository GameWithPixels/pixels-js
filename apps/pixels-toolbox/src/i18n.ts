import * as Localization from "expo-localization";
import i18n from "i18next";
import { initReactI18next } from "react-i18next";

export function capitalize(str: string): string {
  const l = str?.length;
  if (!l) {
    return str;
  } else if (l === 1) {
    return str.toUpperCase();
  } else {
    return str.charAt(0).toUpperCase() + str.slice(1);
  }
}

export function getLanguageShortCode(language: string): string {
  return language.split("_")[0].split("-")[0];
}

i18n
  .use({
    type: "languageDetector",
    init: () => {},
    detect: () => getLanguageShortCode(Localization.locale),
    cacheUserLanguage: (_lng: string) => {},
  })
  .use(initReactI18next)
  .init({
    debug: __DEV__,
    fallbackLng: "en",
    compatibilityJSON: "v3",
    interpolation: {
      escapeValue: false, // not needed for react as it escapes by default
    },
    resources: {
      en: {
        translation: {
          // General
          ok: "Ok",
          cancel: "Cancel",
          close: "Close",
          back: "Back",
          next: "Next",
          yes: "Yes",
          no: "No",
          colonSeparator: ": ",
          commaSeparator: ", ",
          // Dice
          d4: "D4",
          d6: "D6",
          d6pipped: "Pipped D6",
          d6fudge: "Fudge D6",
          d8: "D8",
          d10: "D10",
          d00: "D00",
          d12: "D12",
          d20: "D20",
          lcc: "LCC",
          charger: "Charger",
          // Connection statuses
          disconnected: "disconnected",
          connecting: "connecting",
          connected: "connected",
          identifying: "identifying",
          ready: "ready",
          disconnecting: "disconnecting",
          // Roll statuses
          unknown: "unknown",
          rolled: "rolled",
          onFace: "on face",
          handling: "handling",
          rolling: "rolling",
          crooked: "crooked",
          // Battery statuses
          low: "Low",
          charging: "Charging",
          trickleCharging: "Trickle Charging",
          done: "Done",
          badCharging: "Bad Charging",
          error: "Error",
          // Colorways
          onyxBlack: "Onyx Black",
          hematiteGrey: "Hematite Grey",
          midnightGalaxy: "Midnight Galaxy",
          auroraSky: "Aurora Sky",
          whiteAurora: "White Aurora",
          clear: "Clear",
          custom: "Custom",
          // Battery Controller State
          empty: "Empty",
          transitionOn: "Transition On",
          transitionOff: "Transition Off",
          chargingLow: "Charging Low",
          cooldown: "Cooldown",
          trickle: "Trickle",
          lowTemp: "Low Temperature",
          highTemp: "High Temperature",
          // Battery Controller Mode
          default: "Default",
          forceDisableCharging: " ",
          forceEnableCharging: "Force Enable Charging",
          // Store value result
          success: "success",
          unknownError: "unknown error",
          storeFull: "store full",
          invalidRange: "invalid range",
          notPermitted: "not permitted",

          // Pixels Scan List
          noPixelsFound: "No Pixels die found so far...",
          noPixelsDieOrChargerFound: "No Pixels die or charger found so far...",
          scannedPixelsWithCount: "{{count}} Scanned Pixels",
          tapOnItemToSelect: "Tap On Item To Select",
          clearScanList: "Clear Scan List",

          // Pixels Info
          percentWithValue: "{{value}}%",
          voltageWithValue: "{{value}}V",
          dBmWithValue: "{{value}}dBm",
          firmware: "Firmware",
          bootloader: "Bootloader",
          cancelFirmwareUpdate: "Cancel Firmware Update",
          updateFirmware: "Update Firmware",
          waitingOnFirmwareUpdate: "Waiting On Firmware Update...",
          // updatingFirmware: "Updating Firmware",
          status: "Status",
          advertising: "advertising",
          clearError: "Clear Error",
          unavailable: "Unavailable",
          secondsWithValue: "{{value}} secs",
          minutesWithValue: "{{value}} mins",
          pixelId: "Pixel Id",
          chargerId: "Charger Id",
          leds: "LEDs",
          colorway: "Colorway",
          dieType: "Die Type",
          battery: "Battery",
          chargingState: "Charging State",
          batteryControllerState: "Battery Controller State",
          batteryControllerMode: "Battery Controller Mode",
          internalChargerState: "MCP73832 Charger State",
          chargerOn: "Charger On",
          chargerOff: "Charger Off",
          setChargerMode: "Set Charger Mode",
          rssi: "RSSI",
          temperature: "Temperature",
          mcuTemperature: "MCU Temperature",
          batteryTemperature: "Battery Temperature",
          celsiusWithValue: "{{value}}Â°C",
          rollState: "Roll State",
          calibrate: "Calibrate",
          rainbow: "Rainbow",
          fixedRainbow: "Static Rainbow",
          discharge: "Discharge",
          stopDischarge: "Stop Discharging",
          blinkId: "Blink Id",
          updatingProfile: "Updating Profile",
          dischargeCurrentWithValue: "Discharge Current: {{current}}mA",
          turnOff: "Turn Off",
          resetAllSettings: "Reset All Settings",
          setMinimalProfile: "Set Minimal Profile",
          setUserProfile: "Set User Profile",
          enableTelemetry: "Enable Telemetry",
          saveTelemetry: "Save Telemetry",
          telemetryGraph: "Telemetry Graph",
          exportLogs: "Export Logs",
          reset: "Reset",
          full: "Full",
          printLabel: "Print Label",
          rename: "Rename",
          setFixedRainbowProfile: "Upload Static Hello",
          setFixedRainbowProfileD4: "Upload Static D4",
          unknownDieType: "Unknown Die Type",
          unknownColorway: "Unknown Colorway",
          descriptionShort: "Desc.",
          preparingAsPrintStatus: "Preparing label...",
          sendingAsPrintStatus: "Sending label to printer...",
          doneAsPrintStatus: "Print successful",
          errorAsPrintStatus: "Error printing label",
          playKeyframes: "Play Keyframes",
          setProfile: "Set Profile",
          playAnimation: "Play Animation",
          setDieType: "Set Die Type",
          setColorway: "Set Colorway",
          setRunMode: "Set Run Mode",
          index: "index",
          voltageMV: "Voltage (mV)",

          // Home Screen
          pixelsScanner: "Pixels Scanner",
          selectFirmware: "Select Firmware",
          tapToSelectFirmware: "Tap To Select Firmware",
          screenWithSize: "Screen: {{width}}x{{height}}",
          osNameWithVersion: "OS: {{name}} {{version}}",
          applyToAllRelevantPixels: "Apply To All Relevant Pixels",
          pixelsWithCount: "{{count}} Pixels",
          connect: "Connect",
          disconnect: "Disconnect",
          blink: "Blink",
          rainbowAllFaces: "Rainbow All Faces",
          playProfileAnim: "Play Profile Anim",
          playProfileAnimation: "Play Profile Animation",
          updateProfile: "Update Profile",
          resetProfile: "Reset Profile",
          updateBootloaderAndFirmware: "Update Bootloader & Firmware",
          updateAvailableGoToSettings:
            "Update available, go to Settings page to install.",
          filtersAndOptions: "Filters & Options",
          onlyConnected: "Only Connected",
          expandedInfo: "Expanded Info",
          selectViewOptions: "Select View Options",
          dieTypes: "Die Types",
          selectAll: "Select All",
          unselectAll: "Unselect All",

          // DFU
          dfuStateWithStatus: "DFU State: {{status}}",
          initializing: "initializing",
          validatingFirmware: "validating firmware",
          enablingDfuMode: "enabling",
          starting: "starting",
          uploading: "uploading",
          completed: "completed",
          aborted: "aborted",
          errored: "errored",

          // Validation Screen
          factoryValidation: "Factory Validation",
          validateBoardNoCoil: "Validate FPC Board No Coil",
          validateBoard: "Validate FPC Board",
          validateDie: "Validate Resin Die",
          validateDieFinalSingle: "Die Final Validation",
          validateDieFinalForSet: "Die Final Validation, for Set",
          validateDieReconfigure: "Reconfigure Die",
          validateLccFinal: "LCC Final Validation",
          startingCamera: "Starting camera...",
          needCameraPermission: "Enable camera permissions",
          die: "die",
          dieFinal: "die (final)",
          board: "board",
          coil: "coil",
          boardNoCoil: "board without coil",
          scan: "Scan",
          enterSNFromLabel: "Enter SN written on label, starting by PXL",
          numberMadeOf8CharactersNoCase:
            "This serial number has 8 characters, case doesn't matter",
          invalidSN: "Invalid SN",
          pressOkOrReturnToValidate: "Press Ok or Return to validate",
          resetUsingMagnetWithFormFactor:
            "Reset {{formFactor}} using magnet and point camera at it",
          firmwareUpdate: "Firmware Update",
          bluetoothScan: "Bluetooth Scan",
          checkDieType: "Check Die Type",
          checkLEDCount: "Check LED Count",
          checkBoard: "Check Board",
          accelerometer: "Accelerometer",
          batteryVoltage: "Battery Voltage",
          batteryLevel: "Battery Level",
          waitCharging: "Wait Charging",
          waitNotCharging: "Wait Not Charging",
          removeFromChargerWithCoilOrDie: "Remove {{coilOrDie}} from charger",
          placeOnChargerWithCoilOrDie: "Place {{coilOrDie}} on charger",
          checkLEDs: "Check LEDs",
          areAllLEDsWhite: "Are all LEDs fully white?",
          waitForShutdown: "Wait For Shutdown",
          turningOff: "Turning Off",
          waitingDeviceDisconnect: "Waiting For Device To Disconnect",
          waitFaceUp: "Wait Face Up",
          placeBlinkingFaceUp: "Place blinking face up",
          placeNewBlinkingFaceUp: "Place new blinking face up",
          isBlinkingFaceUp: "Is blinking face up?",
          prepareDevice: "Prepare Device",
          setDeviceName: "Set Device Name",
          exitValidationMode: "Exit Validation Mode",
          waitDieInCase: "Wait Die In Case",
          placeDieInCaseAndCloseLid: "Place die in case and close the lid",
          canceled: "Canceled",
          testSucceeded: "Test Successful!",
          testFailed: "Test Failed!",
          testCanceled: "Test Canceled!",
          clearSettings: "Clear Settings",
          storeSettings: "Store Settings",
          storeDieType: "Store Die Type",
          storeColorway: "Store Colorway",
          keepColorway: "Keep colorway?",
          selectColorway: "Select Colorway",
          storeTimestamp: "Store Timestamp",
          selectContents: "Select Contents",
          selectSetType: "Select Set Type",
          labelPrinting: "Label Printing",
          waitingOnPrint: "Waiting On Print",
          errorPrintingLabel: "Error printing label",
          isLabelPrinted: "Is label correctly printed?",
          tryPrintingLabelAgain: "Try printing label again?",
          timeoutScanningTryAgainWithId:
            "Timeout scanning for Pixel {{id}}, reset device and try again.",
          connectionErrorTryAgain:
            "Connection error, reset device and try again.",
          dfuErrorTryAgain:
            "Error trying to update firmware, reset device and try again.",
          deviceMismatchWithTypeAndLedCount:
            "Device mismatch, expected {{dieType}} but device has {{ledCount}} LEDs",
          deviceMismatchWithExpectedAndActual:
            "Device type mismatch, expected {{expected}} but received {{actual}}",
          storeValueFailedWithResult:
            "Store value failed with result: {{result}}",
          updateDieTypeWithFromAndTo:
            "Update die type to {{to}}? Programmed type is {{from}}.",
          lowBatteryPleaseCharge: "Low battery, please charge",
          updateFirmwareIfOlderWithDate:
            "Firmware will be updated if older than {{date}}.",
          loadingFirmwareFiles: "Loading firmware files...",
          errorLoadingFirmwareFiles: "Error loading firmware files",
          diceUpdatedWithCustomFirmwareWarning:
            "Dice will be updated with the firmware selected in the Scanner Page!",
          invalidLedCountWithValue: "Invalid LED count: {{value}}",
          invalidAccelerometerWithValue:
            "Invalid accelerometer value: {{value}}",
          outOfRangeBatteryVoltageWithValue:
            "Out of range battery voltage: {{value}}v",
          lowSignalStrengthWithValue: "Low signal strength: {{value}}",
          timeoutWhileWaitingForChargingState:
            "Timeout waiting for 'charging' state. Controller state: {{state}}, coil: {{vCoil}}v",
          timeoutWhileWaitingForNotChargingState:
            "Timeout waiting for 'not charging' state. Controller state: {{state}}, coil: {{vCoil}}v",
          timeoutWaitingForFace:
            "Timeout waiting for face {{face}}. Face up: {{rollFace}}, roll state: {{rollState}}",
          disconnectedFromPixel: "Disconnected from Pixels device",
          failedToSendMessageToPixel: "Failed to send message to Pixels device",
          timedOutWithValue: "Timed out after {{value}}s",
          selectProfile: "Select Profile",
          confirmAllDiceProperlyPlaced:
            "Tap 'Ok' once all dice are properly placed.",
          diceNotProperlyPlaced: "Dice not all properly placed",

          // Label printing
          carton: "Carton",
          diceSetBox: "Dice Set Box",
          asn: "ASN",
          example: "Example",
          productCategory: "Product Category",
          singleDie: "Single Die",
          diceSet: "Dice Set",
          productType: "Product Type",
          quantity: "Quantity",
          copies: "Copies",
          print: "Print",

          // Dice sets
          rpg: "RPG",
          advantage: "Advantage",
          boardGamer: "Board Gamer",
          power: "Power",
          fudge: "Fudge",
          classicPippedD6: "Classic Pipped D6",
          initiativeD20: "Initiative D20",
          rageD12: "Rage D12",
          divineD00: "Divine D00",
          eldritchD10: "Eldritch D10",
          smiteD8: "Smite D8",
          fireballD6: "Fireball D6",
          healingD4: "Healing D4",

          // Roll Screen
          rollDemo: "Roll Demo",
          animationsEditor: "Animations Editor",
          diceRenderer: "3D Dice Renderer",

          // Settings
          settings: "Settings",
        },
      },
      zh: {
        translation: {
          // General
          ok: "æ­£ç¡®",
          cancel: "åæ¶",
          close: "å³é­",
          back: "åé",
          next: "ä¸ä¸ä¸ª",
          yes: "æ¯",
          no: "å¦",
          colonSeparator: "ï¼",
          commaSeparator: "ï¼",
          // Dice
          lcc: "å¤§åçµç",
          charger: "åçµå¨",
          // Connection statuses
          disconnected: "å·²æ­å¼è¿æ¥",
          connecting: "è¿æ¥ä¸­",
          connected: "å·²è¿æ¥",
          identifying: "è¯å«ä¸­",
          ready: "åå¤å¥½",
          disconnecting: "æ­å¼è¿æ¥ä¸­",
          // Roll statuses
          unknown: "æªç¥",
          rolled: "å·èµ·ç",
          onFace: "éª°å­ç¨³å®æ¾ç½®å¥½",
          handling: "ç¨æææ",
          rolling: "éª°å­æ»å¨ä¸­",
          crooked: "éª°å­ä½ç½®ä¸å¹³",
          // Battery statuses
          low: "çµæ± çµéä½",
          charging: "åçµä¸­",
          done: "åçµå®æ",
          badCharging: "åçµä¸æå",
          error: "åçµéè¯¯",
          // Colorways
          onyxBlack: "æ·±é»è²",
          hematiteGrey: "èµ¤éç°",
          midnightGalaxy: "æç©ºè²",
          auroraSky: "å¤©èè²",
          whiteAurora: "ç½æåè²",
          clear: "éæè²",
          custom: "å®å¶è²",
          // Battery Controller State
          // empty: "Empty",
          // transitionOn: "Transition On",
          // transitionOff: "Transition Off",
          // chargingLow: "Charging Low",
          // cooldown: "Cooldown",
          // trickle: "Trickle",
          // lowTemp: "Low Temperature",
          // highTemp: "High Temperature",
          // Battery Controller Mode
          default: "é»è®¤",
          forceDisableCharging: "å¼ºå¶ç¦ç¨åçµ",
          forceEnableCharging: "å¼ºå¶å¯ç¨åçµ",
          // Store value result
          success: "æå",
          unknownError: "æªç¥éè¯¯",
          storeFull: "å­å¨å·²æ»¡",
          invalidRange: "æ æçèå´",
          notPermitted: "ä¸åè®¸",

          // Pixels Scan List
          noPixelsFound: "æ²¡æåç°éª°å­",
          scannedPixelsWithCount: "{{count}} æ«æåçéª°å­",
          tapOnItemToSelect: "ç¹å»åå·è¿è¡éæ©",
          clearScanList: "æ¸ç©ºæ«ææ¸å",

          // Pixel Info
          percentWithValue: "{{value}}%",
          voltageWithValue: "{{value}}V",
          dBmWithValue: "{{value}}dBm",
          firmware: "åºä»¶",
          bootloader: "Bootloader",
          cancelFirmwareUpdate: "åæ¶åºä»¶æ´æ°",
          updateFirmware: "æ´æ°åºä»¶",
          waitingOnFirmwareUpdate: "ç­å¾åºä»¶æ´æ°",
          // updatingFirmware: "æ´æ°åºä»¶ä¸­",
          status: "ç¶æ",
          advertising: "å¹¿æ­ä¸­",
          clearError: "æ¸é¤éè¯¯",
          unavailable: "ä¸å¯ç¨",
          secondsWithValue: "{{value}} ç§",
          minutesWithValue: "{{value}} åé",
          pixelId: "éª°å­ID",
          chargerId: "åçµå¨ID",
          leds: "LEDs",
          colorway: "äº®åæ¹å¼",
          dieType: "éª°å­ç±»å",
          battery: "çµæ± ",
          chargingState: "çµæ± ç¶æ",
          batteryControllerState: "çµæ± åçµæ¾çµç¶æ",
          batteryControllerMode: "çµæ± æ§å¶æ¨¡å¼",
          internalChargerState: "MCP73832åçµå¨ç¶æ",
          chargerOn: "æå¼åçµå¨",
          chargerOff: "å³é­åçµå¨",
          rssi: "RSSI",
          temperature: "æ¸©åº¦",
          mcuTemperature: "MCU æ¸©åº¦",
          batteryTemperature: "çµæ± æ¸©åº¦",
          celsiusWithValue: "{{value}}Â°C",
          rollState: "æ»å¨ç¶æ",
          calibrate: "æ ¡å",
          rainbow: "å½©è¹å¨ç»ææ",
          discharge: "æ¾çµ",
          stopDischarge: "åæ­¢æ¾çµ",
          blinkId: "éªçID",
          updatingProfile: "æ´æ°èµæ",
          dischargeCurrentWithValue: "æ¾çµçµæµï¼{{current}}mA",
          turnOff: "å³é­",
          resetAllSettings: "éç½®ææè®¾ç½®",
          printLabel: "æå°æ ç­¾",
          rename: "éå½å",
          unknownDieType: "æªç¥çéª°å­ç±»å",
          unknownColorway: "æªç¥çäº®åæ¹å¼",
          descriptionShort: "æè¿°",
          preparingAsPrintStatus: "åå¤æ è´´",
          sendingAsPrintStatus: "åéæ è´´å°æå°æº",
          doneAsPrintStatus: "æå°æå",
          setColorway: "è®¾ç½®é¢è²",
          setRunMode: "è®¾ç½®è¿è¡æ¨¡å¼",
          index: "ææ°",

          // Home Screen
          pixelsScanner: "éª°å­æ«æå¨",
          selectFirmware: "éæ©åºä»¶",
          tapToSelectFirmware: "ç¹å»éæ©åºä»¶",
          screenWithSize: "å±å¹: {{width}}x{{height}}",
          osNameWithVersion: "OS: {{name}} {{version}}",
          applyToAllRelevantPixels: "éç¨äºææç¸å³çéª°å­",
          pixelsWithCount: "{{count}} ä¸ªéª°å­",
          connect: "è¿æ¥",
          disconnect: "æ­å¼èç³»",
          blink: "éªç",
          updateProfile: "æ´æ°èµæ",
          updateBootloaderAndFirmware: "æ´æ°å¼å¯¼è£è½½ç¨åºååºä»¶",
          updateAvailableGoToSettings: "ææ°çæ´æ°ï¼è¯·å°è®¾ç½®é¡µé¢å®è£ã",

          // DFU
          dfuStateWithStatus: "DFU ç¶æï¼{{status}}",
          initializing: "æ­£å¨åå§å",
          validatingFirmware: "æµè¯ä¸­",
          enablingDfuMode: "å¯å¨ä¸­",
          starting: "å¼å§",
          uploading: "ä¸ä¼ ä¸­",
          completed: "å®æ",
          aborted: "ä¸­æ­",
          errored: "errored",

          // Validation Screen
          factoryValidation: "å·¥åæµè¯",
          validateBoardNoCoil: "æµè¯FPCåæ¿ï¼ä¸å¸¦çº¿åï¼",
          validateBoard: "æµè¯FPCæ¿",
          validateDie: "æµè¯éª°å­",
          validateDieFinalSingle: "éª°å­æç»çéªè¯",
          validateDieFinalForSet: "å¤§åçµçéª°å­æåçéªè¯",
          validateDieReconfigure: "éæ°éç½®éª°å­",
          validateLccFinal: "å¤§åçµçæåçéªè¯",
          startingCamera: "æå¼æåå¤´",
          needCameraPermission: "æå¼æåå¤´æé",
          die: "éª°å­",
          dieFinal: "éª°å­ï¼æç»çï¼",
          board: "æ¿",
          coil: "çº¿å",
          boardNoCoil: "æ²¡æçº¿åçæ¿å­",
          scan: "æ«æ",
          enterSNFromLabel: "è¾å¥æ è´´ä¸çåºåå·ï¼ç±PXLå¼å§",
          numberMadeOf8CharactersNoCase: "æ­¤åºåå·æ8ä¸ªæ°å­",
          invalidSN: "æ æçåºåå·",
          pressOkOrReturnToValidate: "æOKæéæ°è¿åéªè¯",
          resetUsingMagnetWithFormFactor:
            "ä½¿ç¨ç£ééç½® {{formFactor}}ï¼ç¶åä½¿ç¨æåå¤´å¯¹å",
          firmwareUpdate: "æ´æ°åºä»¶",
          bluetoothScan: "æ«æèç",
          checkDieType: "æ£æ¥éª°å­ç±»å",
          checkLEDCount: "æ£æ¥LEDæ°é",
          checkBoard: "æ£æ¥æ¿",
          accelerometer: "å éåº¦è®¡",
          batteryVoltage: "çµæ± çµå",
          batteryLevel: "çµæ± å®¹é",
          waitCharging: "ç­å¾åçµ",
          waitNotCharging: "æ²¡æåçµ",
          removeFromChargerWithCoilOrDie: "ä»åçµå¨ä¸ç§»å¼{{coilOrDie}} ",
          placeOnChargerWithCoilOrDie: "æ{{coilOrDie}}æ¾å¨åçµå¨ä¸",
          checkLEDs: "æ£æ¥LED",
          areAllLEDsWhite: "æ¯å¦ææçLEDç¯é½æ¾ç¤ºç½è²ï¼",
          waitForShutdown: "ç­å¾å³æº",
          turningOff: "å³é­ä¸­",
          waitingDeviceDisconnect: "ç­å¾è®¾å¤æ­å¼è¿æ¥",
          waitFaceUp: "ç­å¾æ­£é¢æä¸",
          placeBlinkingFaceUp: "ç­å¾éª°å­éªåé¢æä¸",
          placeNewBlinkingFaceUp: "ç­å¾éª°å­æ°çéªåé¢æä¸",
          isBlinkingFaceUp: "éªåé¢æ¯å¦æä¸ï¼",
          prepareDevice: "åå¤è®¾å¤",
          setDeviceName: "è®¾ç½®è®¾å¤åå­",
          exitValidationMode: "éåºæµè¯æ¨¡å¼",
          waitDieInCase: "ç­å¾éª°å­æ¾å¥çä¸­",
          placeDieInCaseAndCloseLid: "å°éª°å­æ¾å¨çä¸­å¹¶å³é­çå­",
          canceled: "åæ¶",
          testSucceeded: "æµè¯æåï¼",
          testFailed: "æµè¯å¤±è´¥ï¼",
          testCanceled: "åæ¶æµè¯ï¼",
          clearSettings: "æ¸é¤è®¾ç½®",
          storeSettings: "ä¿å­è®¾ç½®",
          storeDieType: "ä¿å­éª°å­ç±»å",
          storeColorway: "ä¿å­äº®åæ¹å¼",
          keepColorway: "ä¿æäº®åæ¹å¼",
          selectColorway: "éæ©äº®åæ¹å¼",
          storeTimestamp: "ä¿å­æ¶é´æ³",
          selectContents: "éæ©åå®¹",
          selectSetType: "éæ©ç»å",
          labelPrinting: "æ ç­¾å°å·",
          waitingOnPrint: "ç­å¾å°å·",
          errorPrintingLabel: "æ ç­¾ä¸ä¼è¢«æå°",
          isLabelPrinted: "æ è´´æ¯å¦å°å·æ­£ç¡®ï¼",
          tryPrintingLabelAgain: "å°è¯éæ°æå°æ è´´ï¼",
          timeoutScanningTryAgainWithId:
            "æ«ææ¶é´å·²ç»è¶æ¶{{id}}ï¼è¯·éç½®è®¾å¤å¹¶éæ°å¼å§ã",
          connectionErrorTryAgain: "è¿æ¥éè¯¯ï¼è¯·éç½®è®¾å¤å¹¶éæ°å¼å§ã",
          dfuErrorTryAgain: "æ´æ°åºä»¶éè¯¯ï¼è¯·éç½®æºå¨å¹¶éæ°å°è¯ã",
          deviceMismatchWithTypeAndLedCount:
            "éª°å­ç±»åéè¯¯ï¼åºè¯¥æ¯{{dieType}}ä½æ¯éª°å­æ¾ç¤ºæ{{ledCount}}LEDs",
          deviceMismatchWithExpectedAndActual:
            "éª°å­ç±»åéè¯¯ï¼æ¬åºè¯¥æ¯{{expected}} ç»ææ¯{{actual}}",
          storeValueFailedWithResult: "ä¿å­æ°æ®å¤±è´¥ å¼ï¼{{result}}",
          updateDieTypeWithFromAndTo:
            "æ´æ°éª°å­ç±»åæ¯{{to}}ï¼ç§å½çç±»åæ¯{{from}}",
          lowBatteryPleaseCharge: "çµæ± çµéä½ï¼éè¦åçµ",
          updateFirmwareIfOlderWithDate:
            "å·¥åæµè¯æ¶ä¼åçº§ä½äºè¿ä¸ª{{date}}çåºä»¶çFPC",
          loadingFirmwareFiles: "è£è½½åºä»¶ä¸­...",
          errorLoadingFirmwareFiles: "è£è½½åºä»¶éè¯¯",
          invalidLedCountWithValue: "éè¯¯çLEDæ°éï¼{{value}}",
          invalidAccelerometerWithValue: "éè¯¯çå éåº¦è®¡å¼ï¼{{value}}",
          outOfRangeBatteryVoltageWithValue: "çµæ± çµåè¶åºèå´ï¼{{value}}v",
          lowSignalStrengthWithValue: "ä¿¡å·å¼±ï¼{{value}}",
          timeoutWhileWaitingForChargingState:
            "ç­å¾åçµç¶æè¶æ¶ï¼æ§å¶çç¶ææ¯{{state}}ï¼çº¿åçµåæ¯{{vCoil}}v",
          timeoutWhileWaitingForNotChargingState:
            "ç­å¾ä¸åçµè¶æ¶ï¼æ§å¶çç¶ææ¯{{state}}ï¼çº¿åçµåæ¯{{vCoil}}v",
          timeoutWaitingForFace:
            "ç­å¾{{face}}é¢æä¸è¶æ¶ï¼æä¸é¢æ¯{{rollFace}}ï¼ç¶ææ¯{{rollState}}",
          disconnectedFromPixel: "ä¸Pixelsè®¾å¤æ­å¼è¿æ¥",
          failedToSendMessageToPixel: "ç»Pixelsè®¾å¤åéæ¶æ¯å¤±è´¥",
          timedOutWithValue: "ç­å¾{{value}}såè¶æ¶",
          selectProfile: "éæ©éç½®æä»¶",
          confirmAllDiceProperlyPlaced: "ææéª°å­æ¾ç½®æ­£ç¡®åè¯·æâæ­£ç¡®ã",
          diceNotProperlyPlaced: "éª°å­æªææ¾å¥½ã",

          // Label printing
          carton: "å¤§ç®±",
          diceSetBox: "å¤©å°ç",
          asn: "ASN",
          example: "ç¤ºä¾",
          productCategory: "äº§ååç±»",
          singleDie: "åéª°å­",
          diceSet: "å¤§åçµç",
          productType: "äº§åç±»å«",
          quantity: "æ°é",
          copies: "æå°ä»½æ°",
          print: "æå°",
        },
      },
    },
  });

export default i18n;
